version: '2'
services:
    daspanel-services:
        image: daspanel/daspanel-services
        volumes:
            - /opt/daspanel/services
        networks:
            - backend
        command:
            - /bin/true
    daspanel-s3-server:
    #s3.daspanel.site:
        image: daspanel/minio-fileserver
        volumes:
            - daspanel-data-dev:/opt/daspanel/data
        networks:
            - backend
        expose:
            - "9000"
        env_file:
            - daspanel.dev.env
            - smtp.dev.env
    daspanel-mariadb:
        image: daspanel/mariadb
        volumes:
            - daspanel-data-dev:/opt/daspanel/data
        networks:
            backend:
                aliases:
                    - daspanel-mysql
        expose:
            - "3306"
        environment:
            - MARIADB_REMOTE_ROOT=true
        env_file:
            - daspanel.dev.env
            - smtp.dev.env
    daspanel-php-fpm-5.6:
        image: daspanel/php-fpm-5.6
        volumes:
            - daspanel-data-dev:/opt/daspanel/data
        networks:
            - backend
        expose:
            - "9000"
        env_file:
            - daspanel.dev.env
            - smtp.dev.env
    daspanel-php-fpm-7.0:
        image: daspanel/php-fpm-7.0
        volumes:
            - daspanel-data-dev:/opt/daspanel/data
        volumes_from:
            - daspanel-services:ro
        networks:
            - backend
        expose:
            - "9000"
        env_file:
            - daspanel.dev.env
            - smtp.dev.env
    daspanel-caddy-http-server:
        image: daspanel/caddy-http-server
        volumes:
            - daspanel-data-dev:/opt/daspanel/data
        volumes_from:
            - daspanel-services:ro
        networks:
            - frontend
            - backend
        ports:
            - "80:80"
            - "443:443"
        env_file:
            - daspanel.dev.env
            - smtp.dev.env
    daspanel-api:
        image: daspanel/api-server:latest-dev
        volumes:
            #- daspanel-data-dev:/opt/daspanel/data
            - daspanel-data-dev:/opt/daspanel/data
            - /home/abner/Devel/abnerjacobsen/python/api_server:/opt/daspanel/apps/apiserver
        networks:
            - frontend
            - backend
        environment:
            - LOCAL_USER_ID=1000
            - GUNICORN_APP_DIR=/opt/daspanel/apps/apiserver/api_server
            - GUNICORN_CMD=/opt/daspanel/apps/apiserver/api_server/wsgi_gunicorn --bind=0.0.0.0:8080 --user=daspanel --group=daspanel api-connexion:app Daspanel_Api_Server
            # - PIP_INSTALL=-r /opt/daspanel/apps/apiserver/requirements/dev.txt
            # -r /opt/daspanel/apps/apiserver/requirements/docs.txt -r /opt/daspanel/apps/apiserver/requirements/pkgutils.txt
        env_file:
            - daspanel.dev.env
            - smtp.dev.env
        expose:
            - "5000"
            - "8080"
    daspanel-panel:
        build:
            context: .
            dockerfile: Dockerfile
        image: daspanel/panel:latest-dev
        volumes:
            - daspanel-data-dev:/opt/daspanel/data
            - .:/opt/daspanel/apps/panel
        networks:
            - frontend
            - backend
        environment:
            - LOCAL_USER_ID=1000
            - GUNICORN_APP_DIR=/opt/daspanel/apps/panel/daspanel_web
            #- GUNICORN_CMD=/opt/daspanel/apps/panel/wsgi --bind=0.0.0.0:5000 --user=daspanel --group=daspanel daspanel_web:app Daspanel_Panel
            - GUNICORN_CMD=su-exec daspanel:daspanel python /opt/daspanel/apps/panel/wsgi.py
            #- PIP_INSTALL=-r /opt/daspanel/apps/apiserver/requirements/dev.txt -r /opt/daspanel/apps/apiserver/requirements/docs.txt -r /opt/daspanel/apps/apiserver/requirements/pkgutils.txt
        env_file:
            - daspanel.dev.env
            - smtp.dev.env
        expose:
            - "5000"
        #ports:
        #    - "10000:5000"

volumes:
    #daspanel-data:
    #    external:
    #        name: daspanel-data
    daspanel-data-dev:
        driver: local
        driver_opts:
            type: none
            device: /home/abner/Devel/data
            o: bind

networks:  
  frontend:
    driver: bridge
  backend:
    driver: bridge


